<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Mois√©s Fausto | Full Stack Developer | PHP | Laravel | Vue Js]]></title>
    <link href="/atom.xml" rel="self"/>
    <link href="/"/>
    <updated>2024-09-18T04:49:07+00:00</updated>
    <id>/</id>
        <author>
        <name><![CDATA[Mois√©s Fausto]]></name>            </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
        <entry>
        <title type="html"><![CDATA[6 truques do PHP que voc√™ deveria conhecer]]></title>
        <link href="/blog/2024/10/12/6-truques-do-php-que-voce-deveria-conhecer"/>
        <updated>2024-10-12T00:00:00+00:00</updated>
        <id>/blog/2024/10/12/6-truques-do-php-que-voce-deveria-conhecer</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*g-rV3DO_WcGWa4HrwRrOow.png" alt="6 truques do PHP que voc√™ deveria conhecer" /></p>

<p>Ao come√ßar no mundo do desenvolvimento, muitas vezes n√£o damos a devida aten√ß√£o a conhecimentos mais avan√ßados sobre as tecnologias com as quais trabalhamos, seja pela correria do dia a dia ou por in√∫meros outros motivos. Vamos come√ßar!</p>

<h2 id="desenvolvendo-fun%C3%A7%C3%B5es-mais-flex%C3%ADveis-usando-closure">Desenvolvendo fun√ß√µes mais flex√≠veis usando Closure</h2>

<p>A <strong>Closure</strong> √© um recurso do PHP que torna as fun√ß√µes an√¥nimas mais poderosas e flex√≠veis.</p>

<p>Fun√ß√µes an√¥nimas s√£o aquelas que podem ser atribu√≠das a vari√°veis, passadas como argumentos para outras fun√ß√µes ou definidas dinamicamente. A classe Closure abrange essas fun√ß√µes e permite o uso de vari√°veis externas dentro delas.</p>

<pre><code>$olaMundo = function ($nome) {
  echo "Ol√°, $nome";
};

$olaMundo("Pedrinho"); // Ol√°, Pedrinho

// Closure Binding
$olaMundo = function () use ($nome) {
  echo "Ol√°, $nome";
};

$nome = "Pedrinho";
$olaMundo(); // Ol√°, Pedrinho
</code></pre>

<h2 id="otimizando-uso-de-mem%C3%B3ria-com-generators">Otimizando uso de mem√≥ria com Generators</h2>

<p>As fun√ß√µes <strong>Generators</strong> s√£o essenciais para otimizar o uso de mem√≥ria quando lidamos com grandes conjuntos de dados. Em vez de gerar todos os dados de uma vez, elas os produzem conforme a necessidade, economizando recursos.</p>

<pre><code>function getNumeros () {
  for ($i = 0; $i &lt; 1000; $i++) {
    yield $i;
  };
};

foreach (getNumeros() as $numero) {
  echo $numero . " ";
};
</code></pre>

<h2 id="simplificando-arrays-complexos-com-array_reduce">Simplificando arrays complexos com array_reduce</h2>

<p><strong>array_reduce</strong> tem como objetivo reduzir o array a um √∫nico valor utilizando alguma opera√ß√£o aritm√©tica (+, -, %, *, ...) para tal.</p>

<pre><code>$numeros = [1,2,3,4,5];

$soma = array_reduce($numeros, fn($carry, $item) =&gt; $carry + $item, 0);

echo $soma; // 15
</code></pre>

<p>Aqui, temos 3 par√¢metros. O <strong>primeiro</strong> √© o array original que servir√° como base para a opera√ß√£o aritm√©tica, o <strong>segundo</strong> √© a fun√ß√£o que ir√° processar o c√°lculo, e o <strong>terceiro</strong> (opcional) servir√° como valor inicial da opera√ß√£o.</p>

<h2 id="uso-eficiente-de-spl-lib-padr%C3%A3o-do-php">Uso eficiente de SPL (lib padr√£o do PHP)</h2>

<p>A SPL oferece diversas classes e interfaces √∫teis j√° integradas ao PHP. Um exemplo √© o <strong>SplFixedArray</strong>, que otimiza o uso de mem√≥ria ao trabalhar com arrays de tamanho fixo.</p>

<pre><code>$array = new SplFixedArray(10);
$array[0] = 1;
echo $array[0]; // 1
</code></pre>

<h2 id="usar-intl---fun%C3%A7%C3%B5es-de-internacionaliza%C3%A7%C3%A3o">Usar Intl - fun√ß√µes de internacionaliza√ß√£o</h2>

<p>A extens√£o <strong>Intl</strong> √© fundamental no desenvolvimento de aplica√ß√µes multil√≠ngues. Ela oferece classes como <strong>NumberFormatter</strong>, <strong>MessageFormatter</strong> e <strong>Locale</strong>, que facilitam a formata√ß√£o de n√∫meros e mensagens de acordo com as conven√ß√µes de diferentes pa√≠ses.</p>

<pre><code>$numeroFormatado = new NumberFormatter('pt_BR', NumberFormatter::CURRENCY);

echo $numeroFormatado-&gt;formatCurrency(1278.98, 'BRL'); // R$1.278,98
</code></pre>

<h2 id="trabalhar-com-fun%C3%A7%C3%B5es-stream-para-arquivos-grandes">Trabalhar com fun√ß√µes stream para arquivos grandes</h2>

<p>Fun√ß√µes de <strong>stream</strong> como <strong>fopen</strong>, <strong>fread</strong>, <strong>fwrite</strong> s√£o importantes para usar a mem√≥ria de maneira eficaz ao trabalhar com arquivos grandes.</p>

<ul>
<li>fopen abre o arquivo</li>
<li>fread l√™ o arquivo</li>
<li>fwrite permite editar o arquivo.</li>
</ul>

<pre><code>$arquivo = fopen("arquivo.txt", "r");

while (($linha = fgets($file)) !== false) {
  echo $linha;
}

fclose($arquivo);
</code></pre>

<p>Essas s√£o apenas algumas das funcionalidades incr√≠veis que o PHP oferece. Claro, existem muitos outros recursos, mas escolhi essas 6 para manter o conte√∫do direto e √∫til. Com essas dicas, voc√™ j√° conseguir√° melhorar muito seus projetos. Espero que tenha gostado das sugest√µes e at√© a pr√≥xima!</p>

<h3 id="refer%C3%AAncias">Refer√™ncias</h3>

<p><a href="https://medium.com/write-a-catalyst/6-php-knowledge-you-didnt-know-you-needed-8c268582921a">6 PHP Knowledge You Didn‚Äôt Know You Needed</a></p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[Arrumando a casa com sort-imports do ESLint]]></title>
        <link href="/blog/2023/09/05/arrumando-a-casa-com-sort-imports-do-eslint"/>
        <updated>2023-09-05T00:00:00+00:00</updated>
        <id>/blog/2023/09/05/arrumando-a-casa-com-sort-imports-do-eslint</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*IBILU5G3Gj7Tn8a_7FJSXA.png" alt="Arrumando a casa com sort-imports do ESLint" /></p>

<p>Voc√™ j√° imaginou como, ao longo do tempo, sua aplica√ß√£o cresce em tamanho e suas importa√ß√µes se tornam cada vez mais ca√≥ticas, a ponto de se tornarem completamente incompreens√≠veis? √Ä medida que a complexidade da sua aplica√ß√£o aumenta, a falta de organiza√ß√£o das importa√ß√µes deixa de fazer sentido, como se voc√™ tivesse uma casa bagun√ßada que nunca √© arrumada.</p>

<p>Se voc√™, assim como eu, preza pela organiza√ß√£o, a partir de hoje voc√™ vai come√ßar a usar o plugin do ESLint. Se quiser aprender como utiliz√°-lo, siga o post abaixo. üòâ</p>

<p>Primeiro de tudo, confira o exemplo de um arquivo com as importa√ß√µes sem organiza√ß√£o.</p>

<pre><code>import dois from 'numeros.js'
import A from 'alfabeto.js'

import { SaoPaulo, EspiritoSanto, RioDeJaneiro, MinasGerais  } from 'cidades.js'
import * as estados from 'estados.js'
import { brasil, nigeria, alemanha } from 'paises.js'

import { LadyGaga } from 'artistas.js'
</code></pre>

<p>Para organizarmos as importa√ß√µes, precisamos usar o plugin do ESLint chamado <a href="https://eslint.org/docs/latest/rules/sort-imports">sort-imports</a>. √â com ele que iremos analisar todas as importa√ß√µes do nosso projeto e, com um simples comando, verificar o que podemos corrigir.</p>

<p>Para isso, instale o ESLint, como comando:</p>

<pre><code>yarn add --dev eslint
</code></pre>

<p>Ap√≥s a instala√ß√£o iremos configurar o ESLint, para isso rode o comando:</p>

<pre><code>npx eslint --init
</code></pre>

<p>Apos rodar o comando, ir√° aparecer em seu terminal as seguintes perguntas:</p>

<p><img src="https://miro.medium.com/v2/resize:fit:640/format:webp/1*aBktbVm5c18fLP74oVGMcg.png" alt="resultado do comando acima" /></p>

<p>Isso vai variar de acordo com o seu projeto. Se voc√™ j√° quiser adicion√°-lo a um projeto existente, pule para o pr√≥ximo t√≥pico.</p>

<p>Agora, voltando √† configura√ß√£o, ap√≥s responder √†s perguntas da instala√ß√£o, deixe seu arquivo <strong>package.json</strong> de acordo com o de baixo:</p>

<pre><code>{
    "scripts": {
        "lint": "eslint .",
        "lint:fix": "yarn run lint --fix"
    },
    "devDependencies": {
        "eslint": "^8.48.0"
    },
    "license": "MIT"
}
</code></pre>

<h2 id="%C3%89-hora-de-de-solucionar-o-problema-finalmente">√â hora de de solucionar o problema (finalmente)</h2>

<p>Agora chegou a hora de resolver o nosso problema principal, que √© organizar nossas importa√ß√µes. Para isso, precisamos adicionar o plugin sort-imports no arquivo .eslintrc, como mostrado na imagem abaixo:</p>

<pre><code>{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": "eslint:recommended",
    "overrides": [
    ],
    "parsetOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    // Adicione dentro de rules o plugin
    "rules": {
        "sort-imports": "error"
    }
}
</code></pre>

<p>Basicamente, essa regra verifica todas as declara√ß√µes de importa√ß√£o e garante que todas as importa√ß√µes sejam organizadas primeiro de acordo com a sintaxe dos elementos utilizados e, em seguida, de forma alfab√©tica pelo primeiro elemento ou nome de alias..</p>

<p>S√≥ com isso j√° conseguimos ter uma corre√ß√£o de lint ocorrendo. Para corrigir, basta rodar o comando:</p>

<pre><code>yarn run lint:fix
</code></pre>

<p>Mas n√£o para por a√≠, ainda podemos fazer algo ainda mais personalizado. Vamos adicionar as seguintes linhas:</p>

<pre><code>// Adiocione dentro de rules o plugin
"rules": {
    "sort-imports": ["error", {
        "ignoreCase": false,
        "ignoreDeclareSort": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": ["all", "single", "multiple", "none"],
        "allowSeparateGroup": true
    }]
}
</code></pre>

<p>Como diria Jack, o Estripador: ‚ÄúVamos por partes!‚Äù</p>

<h2 id="o-que-cada-linha-faz">O que cada linha faz</h2>

<p>Linha 4: Quando true, a regra ignora a distin√ß√£o entre mai√∫sculas e min√∫sculas no nome local das importa√ß√µes.</p>

<p>Linhas 5: Ignora a classifica√ß√£o das instru√ß√µes de declara√ß√£o de importa√ß√£o.</p>

<p>Linha 6: Ignora a classifica√ß√£o dos elementos em uma declara√ß√£o de importa√ß√£o com v√°rios membros.</p>

<p>Linha 7: Existem quatro estilos diferentes, e a ordem de classifica√ß√£o da sintaxe de um elemento padr√£o √©:</p>

<ul>
<li>none - m√≥dulo de importa√ß√£o sem liga√ß√µes exportadas.</li>
<li>all - importe todos os membros fornecidos pelas liga√ß√µes exportadas.</li>
<li>multiple - importar v√°rios membros.</li>
<li>single - importar um membro.</li>
</ul>

<p>Todas as quatro op√ß√µes devem ser especificadas no array, mas voc√™ pode personalizar a sua ordem.</p>

<p>Linha 8: Quando <em>true</em>, a regra verifica a classifica√ß√£o das declara√ß√µes de importa√ß√£o apenas para aquelas que aparecem em linhas consecutivas.</p>

<p>Em termos simples, se houver uma linha em branco, uma linha com um coment√°rio ou qualquer outra instru√ß√£o ap√≥s uma declara√ß√£o de importa√ß√£o, isso afetar√° a ordena√ß√£o das declara√ß√µes de importa√ß√£o.</p>

<p>Agora vamos rodar o comando de lint para que ele nos mostre os erros, como mostrado abaixo:</p>

<pre><code>yarn lint
</code></pre>

<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*codmJEj7r-xmKiKoCP4oVQ.png" alt="erros informados a partir do comando acima" /></p>

<p>Podemos corrigir manualmente ou podemos deixar o comando corrigir para n√≥s, usando o seguinte comando:</p>

<pre><code>yarn lint:fix
</code></pre>

<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*vNW94YnoIo2-HUgSNWMqHQ.png" alt="Alguns dos erros corrigidos a partir do comando acima" /></p>

<p>Vimos que ele corrigiu a maioria dos problemas. Agora, conseguimos corrigir manualmente o restante e obter o seguinte resultado:</p>

<pre><code>import A from 'alfabeto.js'
import dois from 'numeros.js'

import * as estados from 'estados.js'
import { EspiritoSanto, MinasGerais, RioDeJaneiro, SaoPaulo } from 'cidades.js'
import { alemanha, brasil, nigeria } from 'paises.js'

import { LadyGaga } from 'artistas.js'
</code></pre>

<p>Aposto que com essa dica, seu projeto vai ter uma apar√™ncia diferente. Espero ter ajudado voc√™ com este passo a passo. Se gostou ou acredita que posso melhorar algo, deixe algum coment√°rio abaixo!</p>

<p>Obrigado e at√© a pr√≥xima‚Ä¶</p>

<p>fonte: <a href="https://eslint.org/docs/latest/rules/sort-imports">https://eslint.org/docs/latest/rules/sort-imports</a></p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[Os melhores cursos Gratuitos e Pagos para se tornar um Desenvolvedor de sucesso!]]></title>
        <link href="/blog/2023/05/17/os-melhores-cursos-gratuitos-e-pagos-para-se-tornar-um-desenvolvedor-de-sucesso"/>
        <updated>2023-05-17T00:00:00+00:00</updated>
        <id>/blog/2023/05/17/os-melhores-cursos-gratuitos-e-pagos-para-se-tornar-um-desenvolvedor-de-sucesso</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*Yx9J6m8REvc4PaMlVF-Jqg.jpeg" alt="Os melhores cursos Gratuitos e Pagos para se tornar um Desenvolvedor de sucesso!" /></p>

<h2 id="l%C3%B3gica-de-programa%C3%A7%C3%A3o">L√≥gica de programa√ß√£o</h2>

<p>A base da L√≥gica de Programa√ß√£o: Se voc√™ quer se destacar como desenvolvedor, √© crucial ter uma s√≥lida base em l√≥gica de programa√ß√£o. Recomendo o curso de <strong>Python</strong> ministrado por Gustavo Guanabara. Al√©m de aprender l√≥gica, voc√™ tamb√©m ganhar√° conhecimentos valiosos em <strong>Python</strong>. Os exerc√≠cios pr√°ticos s√£o um diferencial, ajudando voc√™ a consolidar seus conhecimentos.</p>

<p>üîó <a href="https://www.cursoemvideo.com/curso/python-3-mundo-1/">https://www.cursoemvideo.com/curso/python-3-mundo-1/</a></p>

<h2 id="html%2C-css-e-javascript">HTML, CSS e Javascript</h2>

<p>A ess√™ncia da web: Dominar <strong>HTML, CSS e JavaScript</strong> √© fundamental para criar sites e aplica√ß√µes web. Aqui est√£o algumas op√ß√µes de cursos que considero diferenciados:</p>

<ul>
<li><strong>Curso de Desenvolvimento Completo 2023</strong>: Este curso abrange todas as tecnologias mais utilizadas no mercado, com projetos pr√°ticos.</li>
</ul>

<p><em>A Udemy frequentemente oferece mega descontos para adquirir os cursos, ent√£o fique atento(a) √†s promo√ß√µes.</em></p>

<p>üîó <a href="https://www.udemy.com/course/web-completo/">https://www.udemy.com/course/web-completo/</a></p>

<p><strong>CSS Flexbox e Grid Layout</strong>: Este curso oferece uma abordagem aprofundada sobre CSS Flexbox e Grid Layout, duas ferramentas poderosas para criar layouts responsivos. Apesar de ter um valor um pouco mais elevado que o da Udemy, voc√™ ter√° acesso a v√°rios cursos adicionais. No momento, a Origamid disponibiliza dois cursos gratuitos sobre o assunto.</p>

<p>üîó <a href="https://www.origamid.com/curso/css-flexbox">https://www.origamid.com/curso/css-flexbox</a></p>

<p>üîó <a href="https://www.origamid.com/curso/css-grid-layout">https://www.origamid.com/curso/css-grid-layout</a></p>

<h2 id="backend">Backend</h2>

<p>Se voc√™ deseja entrar no mundo de backend, o Curso de <strong>PHP</strong> do Gustavo Guanabara √© uma excelente op√ß√£o. Aprender <strong>PHP</strong> √© altamente relevante, j√° que h√° in√∫meras oportunidades de emprego nessa √°rea. Recomendo tamb√©m o curso de <strong>PHP orientada a objetos POO</strong> para ampliar seus conhecimentos.</p>

<p>üîó <a href="https://www.cursoemvideo.com/curso/php-basico/">https://www.cursoemvideo.com/curso/php-basico/</a></p>

<p>üîó <a href="https://www.cursoemvideo.com/curso/php-basico/">https://www.cursoemvideo.com/curso/php-basico/</a></p>

<h2 id="banco-de-dados">Banco de Dados</h2>

<p>Manipulando dados com <strong>SQL</strong>: Agora que voc√™ j√° sabe <strong>PHP</strong>, √© hora de aprender a manipular dados em bancos de dados. Nada melhor do que o <strong>Curso de SQL do Curso em V√≠deo</strong>, ministrado por um dos melhores professores do mercado. O curso aborda desde conceitos b√°sicos como <strong>SELECT</strong> at√© opera√ß√µes avan√ßadas, como <strong>INNER JOIN</strong>.</p>

<p>üîó <a href="https://www.cursoemvideo.com/curso/mysql/">https://www.cursoemvideo.com/curso/mysql/</a></p>

<h2 id="git-e-github">Git e Github</h2>

<p>Gerenciando seus projetos: Por fim, para salvar e compartilhar seus projetos, √© essencial ter conhecimento em <strong>Git</strong> e <strong>Github</strong>. Recomendo o curso do Bruno Orlandi na Udemy, que abrange desde o b√°sico at√© t√≥picos avan√ßados.</p>

<p>üîó <a href="https://www.udemy.com/course/git-e-github/">https://www.udemy.com/course/git-e-github/</a></p>

<p>Com essas recomenda√ß√µes, voc√™ ter√° um √≥timo ponto de partida para sua jornada como desenvolvedor. Lembre-se de que a evolu√ß√£o √© cont√≠nua, ent√£o, √† medida que voc√™ progride, novas tecnologias e habilidades se tornar√£o relevantes. Nunca pare de estudar e evoluir! üöÄ</p>

<p><strong>B√¥nus</strong>: Lembre-se: a persist√™ncia √© a chave para o sucesso. Nunca desista de sua jornada! Crie um plano de estudos consistente, adaptado √† sua realidade, e sua oportunidade certamente chegar√°.</p>

<p>Espero que esses cursos sejam √∫teis para voc√™. Boa sorte em sua jornada de desenvolvimento! ‚ú®üíª</p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[ID Sequencial vs. UUID em SQL: qual √© o melhor identificador para sua tabela?]]></title>
        <link href="/blog/2023/03/31/id-sequencial-vs-uuid-em-sql-qual-e-o-melhor-identificador-para-sua-tabela"/>
        <updated>2023-03-31T00:00:00+00:00</updated>
        <id>/blog/2023/03/31/id-sequencial-vs-uuid-em-sql-qual-e-o-melhor-identificador-para-sua-tabela</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*IU_rWat3qmb2snZldTH6cQ.png" alt="ID Sequencial vs. UUID em SQL: qual √© o melhor identificador para sua tabela?" /></p>

<p>E ai, galera!</p>

<p>Recentemente eu estava estudando sobre Banco de Dados <a href="https://www.postgresql.org/">PostegreSQL</a>, e reparei que o instrutor estava se referenciando ao identificador da tabela de uma forma n√£o comum para mim. Ele usava ao <a href="https://www.postgresql.org/docs/current/datatype-uuid.html">UUID</a> ao inv√©s de um ID, e por isso eu resolvi entender melhor e compartilhar esse breve conte√∫do, espero que gostem.</p>

<p>Quando criamos tabelas em SQL, precisamos de um identificador exclusivo para cada linha da tabela. O ID sequencial √© um n√∫mero inteiro que √© atribu√≠do automaticamente pelo sistema de gerenciamento de banco de dados (DBMS) a cada nova linha adicionada √† tabela. Esse n√∫mero √© geralmente incrementado em um valor fixo a cada nova linha adicionada.</p>

<p>Por exemplo:</p>

<pre><code>CREATE TABLE clientes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255),
    email VARCHAR(255)
);
</code></pre>

<p>Nesse exemplo, o ID √© um inteiro que √© gerado automaticamente pelo DBMS a cada nova linha adicionada √† tabela clientes. O uso de IDs sequenciais √© simples e f√°cil de implementar, e pode ser muito eficiente em termos de desempenho para grandes tabelas, pois n√£o h√° necessidade de gerar um valor exclusivo complexo para cada nova linha.</p>

<p>Por outro lado, o UUID √© um identificador exclusivo global que √© gerado aleatoriamente e √© garantido que nunca se repetir√°. Isso significa que o valor do UUID √© muito menos previs√≠vel do que um ID sequencial, e √© muito improv√°vel que duas linhas na mesma ou em tabelas diferentes tenham o mesmo valor de UUID. Por exemplo:</p>

<pre><code>CREATE TABLE produtos (
    id UUID PRIMARY KEY,
    nome VARCHAR(255),
    preco DECIMAL(10,2)
);
</code></pre>

<p>Nesse exemplo, o ID √© um UUID que √© gerado aleatoriamente pelo DBMS a cada nova linha adicionada √† tabela produtos. O uso de UUIDs garante que o valor exclusivo de cada linha na tabela seja mantido, mesmo se os dados forem distribu√≠dos em v√°rios servidores.</p>

<h2 id="id-sequencial">ID Sequencial</h2>

<h3 id="pontos-positivos%3A">Pontos Positivos:</h3>

<ul>
<li>F√°cil de implementar</li>
<li>Geralmente muito eficiente em termos de desempenho para grandes tabelas</li>
<li>Possibilita uma ordena√ß√£o das linhas de acordo com a ordem de inser√ß√£o</li>
</ul>

<h3 id="pontos-negativos%3A">Pontos negativos:</h3>

<ul>
<li>N√£o garante a exclusividade dos valores gerados, uma vez que valores duplicados podem ser gerados se houver alguma falha no sistema</li>
<li>Torna mais f√°cil a tentativa de adivinhar valores de ID subsequentes e, portanto, menos seguro</li>
</ul>

<h2 id="uuid">UUID</h2>

<h3 id="pontos-positivos%3A">Pontos positivos:</h3>

<ul>
<li>Garante a exclusividade dos valores gerados, mesmo se os dados forem distribu√≠dos em v√°rios servidores</li>
<li>√â muito menos previs√≠vel do que um ID sequencial, tornando mais dif√≠cil a tentativa de adivinhar valores subsequentes e, portanto, mais seguro</li>
</ul>

<h3 id="pontos-negativos%3A">Pontos Negativos:</h3>

<ul>
<li>Pode ser mais dif√≠cil de implementar em compara√ß√£o com um ID sequencial</li>
<li>Pode ter um desempenho um pouco pior em grandes tabelas, devido √† complexidade dos valores gerados</li>
<li>N√£o permite uma ordena√ß√£o das linhas de acordo com a ordem de inser√ß√£o, o que pode ser um problema em certas aplica√ß√µes</li>
</ul>

<p>Em resumo, a principal diferen√ßa entre o uso de um ID sequencial e um UUID para identificar tabelas em SQL √© a previsibilidade do valor gerado. IDs sequenciais s√£o previs√≠veis e f√°ceis de implementar, mas n√£o s√£o garantidos como exclusivos, enquanto os UUIDs s√£o muito menos previs√≠veis e garantidos como exclusivos. A escolha entre usar um ID sequencial ou um UUID depender√° das necessidades espec√≠ficas do sistema e das caracter√≠sticas de desempenho e seguran√ßa desejadas.</p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[Algumas dicas para aprender ingl√™s na √°rea de tecnologia]]></title>
        <link href="/blog/2023/02/28/algumas-dicas-para-aprender-ingles-na-area-de-tecnologia"/>
        <updated>2023-02-28T00:00:00+00:00</updated>
        <id>/blog/2023/02/28/algumas-dicas-para-aprender-ingles-na-area-de-tecnologia</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*Z9FRQRHMq6G53dCYaoi4Ew.png" alt="Algumas dicas para aprender ingl√™s na √°rea de tecnologia" /></p>

<p>Ol√°, pessoal!</p>

<p>Hoje em dia, a tecnologia est√° em constante evolu√ß√£o e cada vez mais presente em nossas vidas. Por isso, √© importante que os profissionais da √°rea de tecnologia estejam sempre atualizados e preparados para lidar com as demandas do mercado. E uma das habilidades fundamentais para isso √© o conhecimento da l√≠ngua inglesa.</p>

<p>O ingl√™s √© a l√≠ngua universal dos neg√≥cios e da tecnologia, e o dom√≠nio dessa l√≠ngua pode abrir portas para oportunidades de carreira, permitindo que os profissionais se comuniquem efetivamente com colegas, clientes e parceiros em todo o mundo.</p>

<p>Al√©m disso, muitos recursos e ferramentas importantes na √°rea de tecnologia, como documenta√ß√£o, tutoriais, f√≥runs e comunidades online, s√£o escritos em ingl√™s. E sem o conhecimento dessa l√≠ngua, os profissionais podem perder informa√ß√µes valiosas e ficar para tr√°s em rela√ß√£o aos seus colegas.</p>

<p>Ent√£o, se voc√™ ainda n√£o domina o ingl√™s, aqui est√£o algumas dicas que podem ajud√°-lo a come√ßar:</p>

<p><strong>Fa√ßa um curso de ingl√™s</strong>: Existem muitas op√ß√µes de cursos de ingl√™s online ou presenciais. Escolha um que se adapte √†s suas necessidades e comece a estudar.</p>

<p><strong>Assista a v√≠deos em ingl√™s</strong>: Assista a v√≠deos em ingl√™s com legendas em portugu√™s e, quando se sentir mais confiante, tente assistir sem as legendas.</p>

<p><strong>Ou√ßa podcasts em ingl√™s</strong>: Existem muitos podcasts em ingl√™s sobre tecnologia e outras √°reas. Ou√ßa alguns e tente acompanhar a conversa.</p>

<p><strong>Leia em ingl√™s</strong>: Leia artigos e not√≠cias em ingl√™s sobre tecnologia e outras √°reas. Comece com textos mais simples e v√° aumentando o n√≠vel de dificuldade aos poucos.</p>

<p><strong>Pratique conversa√ß√£o</strong>: Procure amigos ou colegas que falam ingl√™s e pratique conversa√ß√£o com eles.</p>

<p>Lembre-se de que aprender ingl√™s √© uma jornada cont√≠nua, e a pr√°tica constante √© a chave para o sucesso. Ent√£o, comece agora mesmo a aprimorar suas habilidades em ingl√™s e prepare-se para alcan√ßar o sucesso em sua carreira na √°rea de tecnologia.</p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[Thunder Client: ser√° o melhor Client REST?]]></title>
        <link href="/blog/2023/02/23/thunder-client-sera-o-melhor-client-rest"/>
        <updated>2023-02-23T00:00:00+00:00</updated>
        <id>/blog/2023/02/23/thunder-client-sera-o-melhor-client-rest</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*QudcIgp5KGyBccUOGWi1Gw.gif" alt="Thunder Client: ser√° o melhor Client REST?" /></p>

<p>E ai galera‚Ä¶.</p>

<p>A poucas semanas eu vi um parceiro de profiss√£o compartilhar algo, que achei incr√≠vel e que parece que ajudou bastante gente.</p>

<p>De l√° pra c√°, venho pensando em fazer o mesmo e assim ajudar pelo menos uma pessoa por aqui!</p>

<p>O que eu venho falar hoje, √© sobre uma extens√£o para os amantes da ferramenta <strong>VSCODE</strong>, que particularmente eu acho perfeita.</p>

<p>Com <strong>mais de 1200 downloads</strong> o Thunder Clint, basicamente ajuda a fazer requisi√ß√£o HTTP, muito similar as ferramentas <strong>POSTMAN</strong> e o <strong>Insomnia</strong>, sendo um pouco menos robusta por ser uma extens√£o. Mas n√£o pense que ela fica muito abaixo das concorrentes, pois essa pequena extens√£o n√£o deve nada em quesito de funcionalidade, e cada nova vers√£o vem ganhando mais funcionalidades.</p>

<p>Um ponto que destaco, √© que ela √© altamente produtiva, pois voc√™ n√£o precisa sair do VSCODE para fazer as requisi√ß√µes, se voc√™ como eu, gosta de manter tudo centralizado, voc√™ vai entender perfeitamente o qu√£o produtivo √© utilizar o <a href="https://www.linkedin.com/company/thunderclient/">Thunder Client</a>. Al√©m disso, ela conta tamb√©m com:</p>

<ul>
<li>interface muito amig√°vel;</li>
<li>suporte para cole√ß√µes e vari√°veis de ambiente;</li>
<li>script de teste;</li>
<li>suporte ao tema instalado;</li>
<li>importa√ß√£o e exporta√ß√£o para o POSTMAN;</li>
</ul>

<p>Maneiro n√©, nem parece uma extens√£o. Hoje eu n√£o vivo sem!</p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[Repository Patterns: Porque devemos usar?]]></title>
        <link href="/blog/2023/02/23/repository-patterns-porque-devemos-usar"/>
        <updated>2023-02-23T00:00:00+00:00</updated>
        <id>/blog/2023/02/23/repository-patterns-porque-devemos-usar</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:720/format:webp/1*OAFJOw3aphju1Fm7ksDrtA.png" alt="Repository Patterns: Porque devemos usar?" /></p>

<h2 id="aqui-est%C3%A3o-algumas-informa%C3%A7%C3%B5es-importantes-sobre-o-repository-pattern">Aqui est√£o algumas informa√ß√µes importantes sobre o Repository Pattern</h2>

<h3 id="import%C3%A2ncia">Import√¢ncia</h3>

<p>Separa√ß√£o de Responsabilidades: O Repository Pattern permite separar a l√≥gica de acesso a dados da l√≥gica de neg√≥cios, tornando o c√≥digo mais organizado e f√°cil de manter.</p>

<p>Abstra√ß√£o: O Repository fornece uma abstra√ß√£o de alto n√≠vel para o acesso a dados, tornando-o mais f√°cil de usar e reduzindo a complexidade do c√≥digo.</p>

<p>Testabilidade: Ao usar o Repository, √© poss√≠vel escrever testes de unidade para a l√≥gica de neg√≥cios sem se preocupar com o acesso a dados. Isso torna o teste mais f√°cil e confi√°vel.</p>

<h3 id="pontos-fortes">Pontos Fortes</h3>

<p>Organiza√ß√£o: O Repository torna o c√≥digo mais organizado, separando as responsabilidades entre a l√≥gica de neg√≥cios e o acesso a dados.</p>

<p>Reutiliza√ß√£o: O Repository permite reutilizar o mesmo c√≥digo de acesso a dados em diferentes partes do projeto, reduzindo a duplica√ß√£o de c√≥digo.</p>

<p>Testabilidade: O Repository torna o teste de unidade mais f√°cil e confi√°vel, permitindo que os testes sejam escritos para a l√≥gica de neg√≥cios sem se preocupar com o acesso a dados.</p>

<h3 id="pontos-fracos">Pontos Fracos</h3>

<p>Complexidade: O Repository Pattern pode adicionar alguma complexidade ao c√≥digo, especialmente se o projeto √© pequeno e n√£o requer separa√ß√£o de responsabilidades.</p>

<p>Overhead: A implementa√ß√£o do Repository Pattern pode adicionar algum overhead ao c√≥digo, pois requer a cria√ß√£o de uma camada adicional de abstra√ß√£o.</p>

<h3 id="por-que-usar-em-um-projeto-repository-pattern">Por que usar em um projeto Repository Pattern</h3>

<p>Separa√ß√£o de responsabilidades: O Repository Pattern separa a l√≥gica de neg√≥cios da l√≥gica de acesso a dados, tornando o c√≥digo mais organizado e f√°cil de manter.</p>

<p>Reutiliza√ß√£o de c√≥digo: O Repository Pattern permite reutilizar o mesmo c√≥digo de acesso a dados em diferentes partes do projeto, reduzindo a duplica√ß√£o de c√≥digo.</p>

<p>Testabilidade: O Repository Pattern torna o teste de unidade mais f√°cil e confi√°vel, permitindo que os testes sejam escritos para a l√≥gica de neg√≥cios sem se preocupar com o acesso a dados.</p>

<p>Facilidade de manuten√ß√£o: O Repository Pattern torna o c√≥digo mais f√°cil de manter, pois separa a l√≥gica de neg√≥cios da l√≥gica de acesso a dados, tornando mais f√°cil fazer altera√ß√µes no c√≥digo sem afetar outras partes do projeto.</p>

<h3 id="vamos-ver-um-exemplo-feito-em-node-na-pr%C3%A1tica%21">Vamos ver um exemplo feito em Node na pr√°tica!</h3>

<pre><code>listUsers(rquest, response) {
    const { order } = request.query

    const sortedUsers = user.sort((a, b) =&gt; {
        if (order === 'desc') return a.id &lt; b.id ? 1 : -1

        return a.id &gt; b.id ? 1 : -1
    })

    response.send(200, JSON.stringfy(sortedUsers))
}
</code></pre>

<p>Temos na imagem acima, um exemplo sem o uso de Repository Patterns, onde vemos que toda a l√≥gica de manipula√ß√£o dos dados fica sob responsabilidade do m√©todo do Controller.</p>

<p>Apesar de ser um c√≥digo simples, se for uma aplica√ß√£o escal√°vel, devemos usar o padr√£o recomendando para tercerizar a responsabilidade dessa manipula√ß√£o. Vamos ver como ficaria o resultado:</p>

<p>veja como o m√©todo que lista os usu√°rios ficou mais clean e agora lida somente com a sua responsabilidade.</p>

<pre><code>listUsers(rquest, response) {
    const { order } = request.query

    const sortedUsers = UserRepository.orderBy(order, users)

    response.send(200, JSON.stringfy(sortedUsers))
}
</code></pre>

<p>Criamos um novo diret√≥rio, repository/UserRepository, onde vamos lidar com o m√©todo de manipula√ß√£o de ordena√ß√£o.</p>

<pre><code>class UserRepository {
    orderBy(order, users) {
        const sorted = users.sort((a, b) =&gt; {
            if (order === 'desc') return a.id &lt; b.id ? 1 : -1

            return a.id &gt; b.id ? 1 : -1
        })

        return sorted
    }
}

module.exports = new UserRepository();
</code></pre>

<p>Apesar de parecer mais trabalhoso, na pr√°tica iremos entender melhor a import√¢ncia desse Domain-Driven Design, onde iremos ter muito mais produtividade e manuten√ß√£o mais f√°cil no c√≥digo.</p>
]]></content>
    </entry>
        <entry>
        <title type="html"><![CDATA[Deploy na Digital Ocean MinhaExperi√™ncia]]></title>
        <link href="/blog/2021/07/04/deploy-na-digital-ocean-minhaexperiencia"/>
        <updated>2021-07-04T00:00:00+00:00</updated>
        <id>/blog/2021/07/04/deploy-na-digital-ocean-minhaexperiencia</id>
        <content type="html"><![CDATA[<p><img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*dm2Lt6gajeN4mGS8g-eD9g.jpeg" alt="Deploy na Digital Ocean MinhaExperi√™ncia" /></p>

<p>Por causa de uma poss√≠vel demanda que est√° por vir, resolvi estudar a hospedagem da Digital Ocean, que √© uma concorrente da AWS. Vendo alguns v√≠deos resolvi meter a m√£o, fiz alguns teste de configura√ß√£o e j√° me deparei com a primeira pedra no caminho‚Ä¶ como √© ‚Äúcomplexo‚Äù configurar o servidor do 0, logo eu que estava acostumado com Hostgator.</p>

<p>Depois de ter instalado Ubunto, Apache e o PHP com os diversos comandos, o MySql deu ruim‚Ä¶ ahhh MySql sempre me dando uma rasteira. Passei um sufoco com a adi√ß√£o de privil√©gios que nunca dava certo, mas no final como sempre, era bobeira, bobeira essa que me fez lembrar meus tempos de Fedora. Enfim, o servidor ficou no esquema para receber a aplica√ß√£o teste.</p>

<p>Pr√≥ximo passo: pra ser mais ousado eu queria enviar a aplica√ß√£o via git na qual j√° estava no GitLab. Depois de diversas horas configurando e testando, consegui finalmente enviar um arquivo .txt do local para o servidor e tudo ficou perfeito(eu acho).</p>

<p>Apesar da trabalheira, percebi que √© mais f√°cil do que parece e minha aplica√ß√£o nunca mais ir√° ver FileZilla na vida, uma aprendizado que ficou e que agora estou preparado para a demanda citada no inicio na qual acredito que n√£o irei ter supressas o_o</p>

<p>Em breve vou fazer um passo a passo, explicando tudo o que eu fiz.</p>
]]></content>
    </entry>
    </feed>